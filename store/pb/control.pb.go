// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: control.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AddCredentialRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCredentialRequest) Reset()         { *m = AddCredentialRequest{} }
func (m *AddCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*AddCredentialRequest) ProtoMessage()    {}
func (*AddCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{0}
}
func (m *AddCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCredentialRequest.Unmarshal(m, b)
}
func (m *AddCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCredentialRequest.Marshal(b, m, deterministic)
}
func (m *AddCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCredentialRequest.Merge(m, src)
}
func (m *AddCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_AddCredentialRequest.Size(m)
}
func (m *AddCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddCredentialRequest proto.InternalMessageInfo

func (m *AddCredentialRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AddCredentialResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCredentialResponse) Reset()         { *m = AddCredentialResponse{} }
func (m *AddCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*AddCredentialResponse) ProtoMessage()    {}
func (*AddCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{1}
}
func (m *AddCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCredentialResponse.Unmarshal(m, b)
}
func (m *AddCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCredentialResponse.Marshal(b, m, deterministic)
}
func (m *AddCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCredentialResponse.Merge(m, src)
}
func (m *AddCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_AddCredentialResponse.Size(m)
}
func (m *AddCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddCredentialResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AddCredentialRequest)(nil), "AddCredentialRequest")
	proto.RegisterType((*AddCredentialResponse)(nil), "AddCredentialResponse")
}

func init() { proto.RegisterFile("control.proto", fileDescriptor_0c5120591600887d) }

var fileDescriptor_0c5120591600887d = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0x2b,
	0x29, 0xca, 0xcf, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe2, 0x12, 0x71, 0x4c, 0x49,
	0x71, 0x2e, 0x4a, 0x4d, 0x49, 0xcd, 0x2b, 0xc9, 0x4c, 0xcc, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x12, 0xe2, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09,
	0x02, 0xb3, 0x95, 0xc4, 0xb9, 0x44, 0xd1, 0xd4, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x1a, 0xf9,
	0x70, 0x71, 0x39, 0x43, 0x4c, 0xcd, 0x49, 0x2d, 0x12, 0xb2, 0xe3, 0xe2, 0x45, 0x51, 0x26, 0x24,
	0xaa, 0x87, 0xcd, 0x0a, 0x29, 0x31, 0x3d, 0xac, 0xa6, 0x39, 0x69, 0x44, 0xa9, 0xa5, 0x67, 0x96,
	0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x17, 0x97, 0x24, 0x16, 0xa5, 0x57, 0xe9, 0x16,
	0xe7, 0x25, 0x16, 0x14, 0x67, 0xe4, 0x97, 0x94, 0xa4, 0x16, 0xe9, 0x17, 0x97, 0xe4, 0x17, 0xa5,
	0xea, 0x17, 0x24, 0x25, 0xb1, 0x81, 0xfd, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x35, 0x82,
	0x65, 0x8c, 0xd4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	AddCredential(ctx context.Context, in *AddCredentialRequest, opts ...grpc.CallOption) (*AddCredentialResponse, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) AddCredential(ctx context.Context, in *AddCredentialRequest, opts ...grpc.CallOption) (*AddCredentialResponse, error) {
	out := new(AddCredentialResponse)
	err := c.cc.Invoke(ctx, "/Controller/AddCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	AddCredential(context.Context, *AddCredentialRequest) (*AddCredentialResponse, error)
}

// UnimplementedControllerServer can be embedded to have forward compatible implementations.
type UnimplementedControllerServer struct {
}

func (*UnimplementedControllerServer) AddCredential(ctx context.Context, req *AddCredentialRequest) (*AddCredentialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCredential not implemented")
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_AddCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCredentialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).AddCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Controller/AddCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).AddCredential(ctx, req.(*AddCredentialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddCredential",
			Handler:    _Controller_AddCredential_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control.proto",
}
